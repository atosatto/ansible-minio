---
- name: "Set the Minio server download url to default"
  set_fact:
    _minio_server_download_url: "{{ minio_default_server_artifact_url }}"

- name: "Compose the Minio server download url with release {{ minio_server_release }}"
  set_fact:
    _minio_server_download_url: "{{ minio_default_server_artifact_url }}.{{ minio_server_release }}"
  when:
    - minio_server_release | length > 0
    - minio_server_artifact_url | length == 0

- name: "Override the Minio server download url"
  set_fact:
    _minio_server_download_url: "{{ minio_server_artifact_url }}"
  when:
    - minio_server_artifact_url | length > 0
    - minio_server_release | length == 0

- name: "Get the Minio server checksum for {{ go_arch }} architecture"
  set_fact:
    _minio_server_checksum: "sha256:{{ lookup('url', _minio_server_download_url + '.sha256sum').split(' ')[0] }}"
  when: minio_server_artifact_checksum | length == 0

- name: "Override the Minio server checksum"
  set_fact:
    _minio_server_checksum: "{{ minio_server_artifact_checksum }}"
  when: minio_server_artifact_checksum | length > 0

- name: "Set service name"
  set_fact:
    _minio_service_name: >-
      {%- if minio_layout is defined and minio_layout | length > 0 -%}
        minio-{{ minio_layout }}
      {%- else -%}
        minio
      {%- endif -%}

- name: "Override cluster nodes based on given layouts"
  set_fact:
    # NOTE: This weird little thing is Jinja that generates an array represented with valid JSON.
    #       While generating YAML would be interpreted as a simple string containing escaped
    #       line breaks, JSON on the other hand seem to actually get encoded along the way and
    #       becomes a proper List.
    #       Please note the surrounding brackets and the comma before the inner loop closing
    minio_server_cluster_nodes: >-
      [
        {%- for layout in minio_layouts -%}
          {%- for host in minio_hosts -%}
            "{{
              [
                'http://',
                (
                  (
                    hostvars[host][
                      'ansible_' + hostvars[host]['minio_network_interface']
                    ]['ipv4']['address']
                    if (
                      hostvars[host]['minio_network_interface'] is defined
                      and hostvars[host]['minio_network_interface'] | length > 0
                    )
                    else hostvars[host].ansible_default_ipv4.address
                  )
                  | default(hostvars[host].ansible_all_ipv4_addresses[0])
                ),
                minio_layouts[layout]['server_addr'],
                minio_layouts[layout]['server_datadir'] | default('/var/lib/minio-' + layout)
              ] | join('')
            }}"
            ,
          {%- endfor -%}
        {%- endfor -%}
      ]
  when: minio_layout is defined and minio_layout | length > 0

- name: "Override environment file if layout name is defined"
  set_fact:
    minio_server_envfile: "/etc/default/minio-{{ minio_layout }}"
  when: minio_layout is defined and minio_layout | length > 0

- name: "Override server address if layout name is defined"
  set_fact:
    minio_server_addr: "{{ minio_layouts[minio_layout]['server_addr'] }}"
  when: minio_layout is defined and minio_layout | length > 0

- name: "Override data directories if layout name is defined"
  set_fact:
    minio_server_datadirs:
      - "{{ minio_layouts[minio_layout]['server_datadir'] | default('/var/lib/minio-' + minio_layout) }}"
  when: minio_layout is defined and minio_layout | length > 0

- name: "Check whether minio runs in distributed mode"
  assert:
    that:
      - minio_access_key | length >= 3
      - minio_secret_key | length >= 8
    msg: "Running in distributed mode. Please define access_key and secret_key."
  when: minio_server_cluster_nodes | length > 1

- name: Create Minio group
  group:
    name: "{{ minio_group }}"
    state: present

- name: Create Minio user
  user:
    name: "{{ minio_user }}"
    group: "{{ minio_group }}"
    system: "yes"
    shell: "/usr/sbin/nologin"

- name: Create the Minio data storage directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: 0750
  when: minio_server_make_datadirs
  with_items: "{{ minio_server_datadirs }}"

- name: Download the Minio server
  get_url:
    url: "{{ _minio_server_download_url }}"
    dest: "{{ minio_server_bin }}"
    owner: "root"
    group: "root"
    mode: 0755
    checksum: "{{ _minio_server_checksum }}"
  register: _download_server
  until: _download_server is succeeded
  retries: 5
  delay: 2
  notify:
    - restart minio
    - verify minio is responsive


- name: cluster dump
  debug:
    msg: "using cluster map {{ minio_server_cluster_nodes }}."

- name: Generate the Minio server envfile
  template:
    src: minio.env.j2
    dest: "{{ minio_server_envfile }}"
    owner: "root"
    group: "{{ minio_group }}"
    mode: 0640
  notify:
    - restart minio
    - verify minio is responsive
    - rewrite previous credentials

- name: Create the Minio server systemd config
  template:
    src: minio.service.j2
    dest: "/etc/systemd/system/{{ _minio_service_name }}.service"
    owner: "root"
    group: "root"
    mode: 0644
  when: ansible_service_mgr == "systemd"
  notify:
    - reload minio systemd
    - restart minio
    - verify minio is responsive

- name: Create the Minio server init.d config
  template:
    src: minio.init.j2
    dest: "/etc/init.d/{{ _minio_service_name }}"
    owner: "root"
    group: "root"
    mode: 0750
  when: ansible_service_mgr != "systemd"
  notify:
    - restart minio
    - verify minio is responsive

- name: Enable and start the Minio service
  service:
    name: "{{ _minio_service_name }}"
    state: started
    enabled: true
